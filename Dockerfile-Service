# Install python on prod
FROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS base

EXPOSE 3010

# Install modules
RUN apt-get update \
    && apt-get install wget xz-utils build-essential checkinstall zlib1g-dev libssl-dev libncurses5-dev libsqlite3-dev libreadline-dev libtk8.5 libgdm-dev libdb4o-cil-dev libpcap-dev -y

# Install python
RUN apt-get install python3 python3-pip -y

# Install mono for pythonnet
RUN apt install apt-transport-https dirmngr gnupg ca-certificates -y \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
    && echo "deb https://download.mono-project.com/repo/debian stable-stretch main" | tee /etc/apt/sources.list.d/mono-official-stable.list \
    && apt update

RUN apt install mono-complete -y

RUN apt-get install libglib2.0-dev clang python-dev -y

# Install python packages
RUN python3 -m pip install pip --upgrade \
    && python3 -m pip install setuptools --upgrade \
    && python3 -m pip install pycparser clang wheel numpy rake_nltk sklearn

# Build and install pythonnet
WORKDIR /build
RUN git clone https://github.com/pythonnet/pythonnet
WORKDIR /build/pythonnet
RUN python3 setup.py bdist_wheel --xplat
RUN mkdir -p /app/Recommendation.Service/Packages
RUN cp -r /build/pythonnet/build/lib.linux-x86_64-3.5/netcoreapp2.0/. /app/Recommendation.Service/Packages

WORKDIR /app
# *************************************************************************************************************************

# Build service
FROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS build
WORKDIR /src

COPY Recommendation.Database/Recommendation.Database.csproj Recommendation.Database/
RUN dotnet restore "Recommendation.Database/Recommendation.Database.csproj"
COPY Recommendation.Service/Recommendation.Service.csproj Recommendation.Service/
# Copy built Python.Runtime.DLL
COPY --from=base /app/Recommendation.Service/Packages/ Recommendation.Service/Packages/
RUN dotnet restore "Recommendation.Service/Recommendation.Service.csproj"
COPY . .
WORKDIR /src/Recommendation.Service
RUN dotnet build "Recommendation.Service.csproj" -c Release -o /app

# *************************************************************************************************************************

FROM build AS publish
RUN dotnet publish "Recommendation.Service.csproj" -c Release -o /app

# *************************************************************************************************************************

FROM base AS final
WORKDIR /app
COPY --from=publish /app .

ENTRYPOINT ["dotnet", "Recommendation.Service.dll",  "--environment=Release"]