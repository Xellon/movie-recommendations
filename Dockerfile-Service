#Build Python.Runtime.DLL
FROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS python_build

RUN apt-get update
RUN apt-get install xz-utils zlib1g-dev build-essential checkinstall libreadline-gplv2-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev -y

RUN wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tar.xz \
    && tar xJf Python-3.6.8.tar.xz\
    && cd Python-3.6.8 \
    && ./configure \
    && make \
    && make install

RUN apt install apt-transport-https dirmngr gnupg ca-certificates -y \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
    && echo "deb https://download.mono-project.com/repo/debian stable-stretch main" | tee /etc/apt/sources.list.d/mono-official-stable.list \
    && apt update \
    && apt install mono-complete -y

RUN apt-get install libglib2.0-dev clang -y

# RUN apt-get install python-setuptools -y \
#     && easy_install pip \
RUN python3 -m pip install wheel pycparser clang

WORKDIR /build
RUN git clone https://github.com/pythonnet/pythonnet
WORKDIR /build/pythonnet
RUN python3 setup.py bdist_wheel --xplat
RUN mkdir /packages
RUN mv /build/pythonnet/build/lib.linux-x86_64-3.6/netcoreapp2.0/Python.Runtime.dll /packages/Python.Runtime.dll


# Install python on prod
FROM mcr.microsoft.com/dotnet/core/aspnet:2.2 AS base
WORKDIR /app
EXPOSE 3010

# Install modules
RUN apt-get update \
    && apt-get install -y wget \
    && apt-get install xz-utils \
    && apt-get install build-essential -y \
    && apt-get install zlib1g-dev

# Install python
RUN wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tar.xz \
    && tar xJf Python-3.6.8.tar.xz\
    && cd Python-3.6.8 \
    && ./configure \
    && make \
    && make install \
    && rm -rf /app/Python-3.6.8 \
    && rm /app/Python-3.6.8.tar.xz

# Install mono for pythonnet
RUN apt install apt-transport-https dirmngr gnupg ca-certificates -y \
    && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF \
    && echo "deb https://download.mono-project.com/repo/debian stable-stretch main" | tee /etc/apt/sources.list.d/mono-official-stable.list \
    && apt update \
    && apt install mono-xsp4 -y

# Install python packages
RUN apt-get install python-setuptools -y \
    && easy_install pip \
    && pip install pip --upgrade \
    && pip install setuptools --upgrade \
    && python3 - pip install wheel numpy rake_nltk sklearn pythonnet

# Build service
FROM mcr.microsoft.com/dotnet/core/sdk:2.2 AS build
WORKDIR /src
# Copy built Python.Runtime.DLL
COPY --from=python_build /packages /Packages

COPY Recommendation.Database/Recommendation.Database.csproj Recommendation.Database/
RUN dotnet restore "Recommendation.Database/Recommendation.Database.csproj"
COPY Recommendation.Service/Recommendation.Service.csproj Recommendation.Service/
RUN dotnet restore "Recommendation.Service/Recommendation.Service.csproj"
COPY . .
WORKDIR /src/Recommendation.Service
RUN dotnet build "Recommendation.Service.csproj" -c Release -o /app

FROM build AS publish
RUN dotnet publish "Recommendation.Service.csproj" -c Release -o /app

FROM base AS final
WORKDIR /app
COPY --from=publish /app .

ENTRYPOINT ["dotnet", "Recommendation.Service.dll",  "--environment=Release"]